apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'

def artifact = new Properties()
artifact.load(new FileInputStream("$projectDir/deploy.settings"))

version artifact.version

android {
    testOptions.unitTests.includeAndroidResources = true
    compileSdkVersion rootProject.ext.compileSdkVersion

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion rootProject.ext.compileSdkVersion
        versionCode 1
        versionName "${version}"
        multiDexEnabled true

        ndk {
            moduleName = "hmbtcore"
            ldLibs "log"
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    android {
        lintOptions {
            abortOnError false
        }
        testOptions {
            unitTests {
                includeAndroidResources = true
            }
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'x86', 'armeabi-v7a'
            universalApk true
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'
        // This is not necessary unless you have precompiled libraries in your project.
    }
}

dependencies {
    if (project.releaseType == 0) {
        implementation project(':hmkit-crypto')
        implementation project(':hmkit-utils')
    } else {
        implementation("com.highmobility:hmkit-crypto:${project.cryptoVersion}")
    }

    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation('com.android.volley:volley:1.1.0')
    implementation('com.google.code.findbugs:jsr305:3.0.2')

    testImplementation group: 'junit', name: 'junit', version: '4.12'
    testImplementation 'org.robolectric:robolectric:4.0.2'
//    testImplementation 'com.android.support.test:runner:0.5'
//    testImplementation 'com.android.support.test:rules:0.5'
    testImplementation 'androidx.test:core:1.0.0'
}

if (project.releaseType > 0) {
    // deploy
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'digital.wup.android-maven-publish'

    def repo = project.hasProperty("repo") ? project.property("repo") : artifact.repo

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from android.sourceSets.main.java.srcDirs
    }

    publishing {
        publications {
            aar(MavenPublication) {
                from components.android
                groupId artifact.groupId
                // for bintray: https://github.com/bintray/gradle-bintray-plugin
            }
        }
    }

// artifactory
    artifactory {
        contextUrl = System.properties['hmArtifactoryUrl']

        publish {
            repository {
                repoKey = repo
                username = System.properties['hmArtifactoryPublishUser']
                password = System.properties['hmArtifactoryPublishPassword']
                maven = true
            }

            defaults {
                publishArtifacts = true
                publications('aar')
                publishIvy = false
                publishPom = true
            }
        }
    }
}
