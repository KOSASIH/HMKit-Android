apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

def artifact = new Properties()
artifact.load(new FileInputStream("$projectDir/deploy.settings"))

version artifact.version

android {
    compileSdkVersion ver.compileSdk

    defaultConfig {
        minSdkVersion 21
        targetSdkVersion ver.compileSdk
        versionCode 1
        versionName "${version}"
        multiDexEnabled true

        ndk {
            moduleName = "hmbtcore"
            ldLibs "log"
        }

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    lintOptions {
        abortOnError false
    }

    testOptions {
        unitTests {
            includeAndroidResources = true
        }
    }

    splits {
        abi {
            enable true
            reset()
            include 'arm64-v8a', 'armeabi-v7a', 'x86', 'x86_64'
            universalApk true
        }
    }

    sourceSets.main {
        jni.srcDirs = [] // This prevents the auto generation of Android.mk
        jniLibs.srcDir 'src/main/libs'
        // This is not necessary unless you have precompiled libraries in your project.
    }
}

dependencies {
    api project(':hmkit-core-jni')

    if (project.releaseType == 0) {
        implementation project(':hmkit-crypto')
        implementation project(':hmkit-utils')
    } else {
        implementation deps.crypto
        implementation deps.utils
    }

    implementation deps.volley
    implementation deps.timber
    implementation deps.findBugs
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'

    // its not easy to use ndk with junit(should build separate binary)
    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:4.0.2'
    testImplementation 'androidx.test:core:1.1.0'

    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test:runner:1.1.0-alpha4'
    androidTestImplementation 'androidx.test:rules:1.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.0-alpha4'
    androidTestImplementation 'androidx.test.espresso:espresso-intents:3.1.0'
}

if (project.releaseType > 0) {
    // deploy
    apply plugin: 'com.jfrog.artifactory'
    apply plugin: 'digital.wup.android-maven-publish'

    def repo = project.hasProperty("repo") ? project.property("repo") : artifact.repo

    task sourcesJar(type: Jar) {
        archiveClassifier.set('sources')
        from android.sourceSets.main.java.srcDirs
    }

    publishing {
        publications {
            aar(MavenPublication) {
                from components.android
                groupId artifact.groupId
                // for bintray: https://github.com/bintray/gradle-bintray-plugin
            }
        }
    }

// artifactory
    artifactory {
        contextUrl = System.properties['hmArtifactoryUrl']

        publish {
            repository {
                repoKey = repo
                username = System.properties['hmArtifactoryPublishUser']
                password = System.properties['hmArtifactoryPublishPassword']
                maven = true
            }

            defaults {
                publishArtifacts = true
                publications('aar')
                publishIvy = false
                publishPom = true
            }
        }
    }
}